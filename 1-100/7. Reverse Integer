class Solution {
public:
    int reverse(int x) {
        if(!x) return x;
        bool sign = (x > 0);
        int reverse_number = 0;
        while(x != 0){
            int digit = x % 10;
            if(sign){
                if(reverse_number < INT_MAX / 10){
                    reverse_number = reverse_number * 10 + digit;
                }else if(reverse_number == INT_MAX / 10 && digit <= INT_MAX % 10)
                    reverse_number = reverse_number * 10 + digit;
                else
                    return 0;
                x /= 10;
            }else{
                if(reverse_number > INT_MIN / 10){
                    reverse_number = reverse_number * 10 + digit;
                }else if(reverse_number == INT_MIN / 10 && digit >= INT_MIN % 10)
                    reverse_number = reverse_number * 10 + digit;
                else
                    return 0;
                x /= 10;
            }
        }
        return reverse_number;
    }
};

class Solution:
    def reverse(self, x: int) -> int:
        if not x:
            return x
        MAX_VAL = pow(2,31) - 1
        MIN_VAL = -pow(2,31)
        reverse_number = 0
        sign = 1 if x > 0 else -1
        x = abs(x)
        while x:
            digit = x % 10
            if reverse_number < MAX_VAL // 10:
                reverse_number = reverse_number * 10 + digit
            elif reverse_number == MAX_VAL // 10 and digit <= MAX_VAL % 10:
                reverse_number = reverse_number * 10 + digit
            else:
                return 0
            x //= 10
        
        reverse_number *= sign  
        
        if reverse_number < MIN_VAL or reverse_number > MAX_VAL:
            return 0

        return reverse_number

Time Complexity: O(log(N))
Space Complexity: O(1)
